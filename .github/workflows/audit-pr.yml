# Location: .github/workflows/audit-pr.yml

name: 'Audit PR for Unresolved Comments'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [closed]
  issue_comment:
    types: [created]

jobs:
  audit:
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/auditor review'))
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Run Audit and Generate Summary
        id: run_audit
        env:
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_MARKER: ""
        run: |
          # (Ph·∫ßn logic t√≠nh to√°n n√†y v·∫´n gi·ªØ nguy√™n)
          graphql_query='
            query($owner: String!, $name: String!, $prNumber: Int!) {
              repository(owner: $owner, name: $name) {
                pullRequest(number: $prNumber) {
                  reviewThreads(first: 100) {
                    nodes {
                      isResolved
                      comments(first: 20) {
                        nodes {
                          author { login }
                        }
                      }
                    }
                  }
                }
              }
            }'

          unresolved_count=$(gh api graphql -f query="$graphql_query" -f owner="${{ github.repository_owner }}" -f name="${{ github.event.repository.name }}" -F prNumber="$PR_NUMBER" \
            --jq '[.data.repository.pullRequest.reviewThreads.nodes[] | select(.isResolved == false) | .comments.nodes[] | select(.author.login == "coderabbitai")] | length')
          
          echo "unresolved_count=$unresolved_count" >> $GITHUB_OUTPUT

          SUMMARY_BODY="${{ env.COMMENT_MARKER }}\n\n### üõ°Ô∏è Final Audit Report\n\n"
          if [ "$unresolved_count" -gt 0 ]; then
            SUMMARY_BODY="${SUMMARY_BODY}**<font color='red'>‚ùå Audit Failed.</font>** Found **$unresolved_count** unresolved CodeRabbit comment(s)."
          else
            SUMMARY_BODY="${SUMMARY_BODY}**<font color='green'>‚úÖ Audit Passed.</font>** All CodeRabbit comments were resolved."
          fi
          
          echo "summary_body<<EOF" >> $GITHUB_OUTPUT
          echo -e "$SUMMARY_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # B∆Ø·ªöC 1: T√åM COMMENT C≈® D·ª∞A TR√äN MARKER
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: find_comment
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.issue.number }}
          body-includes: ${{ env.COMMENT_MARKER }}

      # B∆Ø·ªöC 2: C·∫¨P NH·∫¨T D·ª∞A TR√äN ID T√åM TH·∫§Y HO·∫∂C T·∫†O M·ªöI
      - name: Create or Update Audit Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number || github.event.issue.number }}
          # D√πng comment-id t·ª´ b∆∞·ªõc "Find Comment"
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: ${{ steps.run_audit.outputs.summary_body }}
          edit-mode: replace
      
      - name: Set Workflow Status
        if: always()
        run: |
          unresolved_count=${{ steps.run_audit.outputs.unresolved_count }}
          if [ "$unresolved_count" -gt 0 ]; then
            echo "::error::Audit Failed! Found $unresolved_count unresolved CodeRabbit comment(s)."
            exit 1
          else
            echo "Audit Passed."
          fi