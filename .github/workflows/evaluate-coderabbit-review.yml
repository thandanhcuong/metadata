# Vị trí: .github/workflows/evaluate-coderabbit-review.yml

name: Evaluate CodeRabbit Review

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request_review:
    types: [submitted]

jobs:
  evaluate_codereview:
    if: github.event.sender.login == 'coderabbitai[bot]'
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      COMMENT_MARKER: ""
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # THAY THẾ TOÀN BỘ BƯỚC NÀY ĐỂ DEBUG
      - name: Generate Summary from Unresolved Comments (DEBUG MODE)
        id: generate_summary
        run: |
          graphql_query='
            query($owner: String!, $name: String!, $prNumber: Int!) {
              repository(owner: $owner, name: $name) {
                pullRequest(number: $prNumber) {
                  reviewThreads(first: 100) {
                    nodes {
                      isResolved
                      comments(first: 20) {
                        nodes {
                          author { login }
                          body
                          url
                        }
                      }
                    }
                  }
                }
              }
            }'

          echo "--- DEBUG: Fetching raw data from GraphQL API ---"
          # In ra toàn bộ dữ liệu JSON thô mà không lọc
          gh api graphql -f query="$graphql_query" -f owner="${{ github.repository_owner }}" -f name="${{ github.event.repository.name }}" -F prNumber="$PR_NUMBER"
          echo "--- DEBUG: End of raw data ---"

          # Tạm thời đặt issue_count = 1 để workflow không bị lỗi ở các bước sau
          echo "Forcing issue_count to 1 to allow workflow to complete."
          echo "issue_count=1" >> $GITHUB_OUTPUT
          echo "summary_body=Đây là comment debug." >> $GITHUB_OUTPUT

      - name: Find existing summary comment
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ env.PR_NUMBER }}
          body-includes: ${{ env.COMMENT_MARKER }}

      - name: Create or Update Summary Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ env.PR_NUMBER }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          body: ${{ steps.generate_summary.outputs.summary_body }}
          edit-mode: replace

      - name: Approve or Request Changes based on Issue Count
        run: |
          if [ "${{ steps.generate_summary.outputs.issue_count }}" -gt 3 ]; then
            echo "Requesting changes because issue count is ${{ steps.generate_summary.outputs.issue_count }} (>3)."
            gh pr review $PR_NUMBER --request-changes --body "Action: Yêu cầu thay đổi. Chi tiết xem trong comment tóm tắt."
            gh pr edit $PR_NUMBER --remove-label "READY TO MERGE" || true
          else
            echo "Issue count is ${{ steps.generate_summary.outputs.issue_count }} (<=3). Checking for existing approval."
            
            EXISTING_APPROVAL_ID=$(gh pr view $PR_NUMBER --json reviews --jq '.reviews[] | select(.author.login == "github-actions[bot]" and .state == "APPROVED") | .id' | tail -n 1)

            if [ -z "$EXISTING_APPROVAL_ID" ]; then
              echo "No existing approval found. Submitting a new approval."

              EXISTING_REVIEW_ID=$(gh pr view $PR_NUMBER --json reviews --jq '.reviews[] | select(.author.login == "github-actions[bot]" and .state == "CHANGES_REQUESTED") | .id' | tail -n 1)
              if [ -n "$EXISTING_REVIEW_ID" ]; then
                echo "Dismissing previous 'Changes Requested' review (ID: $EXISTING_REVIEW_ID)."
                gh api \
                  --method PUT \
                  /repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews/$EXISTING_REVIEW_ID/dismissals \
                  -f message="Các vấn đề trước đó đã được giải quyết."
              fi
            else
              echo "PR was already approved by this action (Review ID: $EXISTING_APPROVAL_ID). Skipping."
            fi
            
            gh pr edit $PR_NUMBER --add-label "READY TO MERGE"
          fi

      - name: Report Final Status
        if: always()
        run: |
          if [ "${{ steps.generate_summary.outputs.issue_count }}" -gt 0 ]; then
            STATE='failure'
            DESC="Đánh giá phát hiện thấy có ${{ steps.generate_summary.outputs.issue_count }} vấn đề chưa được giải quyết."
          else
            STATE='success'
            DESC='Đánh giá hoàn tất: không có vấn đề nào.'
          fi
          gh api \
            --method POST \
            /repos/${{ github.repository }}/statuses/$HEAD_SHA \
            -f state="$STATE" \
            -f description="$DESC" \
            -f context='Code Analysis Result'